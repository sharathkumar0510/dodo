# Generated by Django 4.2 on 2025-05-14 23:57

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Sitemap',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('url', models.URLField(max_length=500, unique=True)),
                ('priority', models.DecimalField(decimal_places=1, default=0.5, max_digits=2)),
                ('changefreq', models.CharField(choices=[('always', 'Always'), ('hourly', 'Hourly'), ('daily', 'Daily'), ('weekly', 'Weekly'), ('monthly', 'Monthly'), ('yearly', 'Yearly'), ('never', 'Never')], default='monthly', max_length=10)),
                ('last_modified', models.DateTimeField(auto_now=True)),
            ],
            options={
                'verbose_name': 'Sitemap Entry',
                'verbose_name_plural': 'Sitemap Entries',
            },
        ),
        migrations.CreateModel(
            name='SEOMetadata',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('page_type', models.CharField(choices=[('home', 'Home Page'), ('service', 'Service Page'), ('category', 'Category Page'), ('blog', 'Blog Page'), ('blog_post', 'Blog Post'), ('about', 'About Page'), ('contact', 'Contact Page'), ('faq', 'FAQ Page'), ('terms', 'Terms Page'), ('privacy', 'Privacy Page'), ('custom', 'Custom Page')], max_length=20)),
                ('page_identifier', models.CharField(blank=True, max_length=255, null=True)),
                ('title', models.CharField(max_length=70)),
                ('description', models.TextField(max_length=160)),
                ('keywords', models.CharField(blank=True, max_length=255, null=True)),
                ('canonical_url', models.URLField(blank=True, max_length=500, null=True)),
                ('og_title', models.CharField(blank=True, max_length=70, null=True)),
                ('og_description', models.TextField(blank=True, max_length=200, null=True)),
                ('og_image', models.ImageField(blank=True, null=True, upload_to='seo/og_images/')),
                ('twitter_title', models.CharField(blank=True, max_length=70, null=True)),
                ('twitter_description', models.TextField(blank=True, max_length=200, null=True)),
                ('twitter_image', models.ImageField(blank=True, null=True, upload_to='seo/twitter_images/')),
                ('structured_data', models.JSONField(blank=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'verbose_name': 'SEO Metadata',
                'verbose_name_plural': 'SEO Metadata',
                'unique_together': {('page_type', 'page_identifier')},
            },
        ),
        migrations.CreateModel(
            name='OfflineAction',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('action_type', models.CharField(choices=[('create', 'Create'), ('update', 'Update'), ('delete', 'Delete')], max_length=10)),
                ('resource_type', models.CharField(max_length=50)),
                ('resource_id', models.CharField(blank=True, max_length=50, null=True)),
                ('data', models.JSONField()),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('synced', models.BooleanField(default=False)),
                ('synced_at', models.DateTimeField(blank=True, null=True)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='offline_actions', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Offline Action',
                'verbose_name_plural': 'Offline Actions',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='PushSubscription',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('endpoint', models.URLField(max_length=500)),
                ('p256dh', models.CharField(max_length=255)),
                ('auth', models.CharField(max_length=255)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='push_subscriptions', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Push Subscription',
                'verbose_name_plural': 'Push Subscriptions',
                'unique_together': {('user', 'endpoint')},
            },
        ),
    ]
